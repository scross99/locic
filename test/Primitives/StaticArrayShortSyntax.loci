// RUN: %locic %s --emit-llvm -o %t

int_t[10u] getIntArray(static_array_t<int, 10u> array) {
	return move array;
}

int*[10u] getPtrArray(static_array_t<int*, 10u> array) {
	return move array;
}

int_t[10u]* getArrayPtr(int_t[10u]* array) {
	return move array;
}


int&[10u] getRefArray(static_array_t<int&, 10u> array) {
	return move array;
}

int_t[10u]& getArrayRef(int_t[10u]& array) {
	return array;
}

int_t[10u][10u] getArrayArray(int_t[10u][10u] array) {
	return move array;
}

template <typename T>
T[10u] getTemplateArray(static_array_t<T, 10u> array) require(movable<T>) {
	return move array;
}

import static_array_t<int, 10u> createIntArray();

void localArray() {
	int_t[10u] array = createIntArray();
	unused_result(array);
}

import static_array_t<int_t[10u], 10u> arrayTemplateArgument();

typename_t<int_t[10u]> arrayTypeRef() {
	return int_t[10u];
}
