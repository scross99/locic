// RUN: %locic %s --verify > %t
// RUN: FileCheck < %t %s

interface CanDoThing {
	void doThing();
}

interface CanDoThingNoExcept {
	void doThing() noexcept;
	void doOtherThing() noexcept;
}

template <typename T>
void doThing(T& object) noexcept(T : CanDoThingNoExcept) require(T : CanDoThing) {
	object.doThing();
	// CHECK: .loci:17:2: error: cannot find member 'doOtherThing' in type 'T'
	object.doOtherThing();
}

class TestClass() {
	void doThing() { }
}

class TestClassNoExcept() {
	void doThing() noexcept { }
}

void callDoThing(TestClass& object) {
	doThing<TestClass>(object);
}

void callDoThingNoExcept(TestClassNoExcept& object) noexcept {
	doThing<TestClassNoExcept>(object);
}

// CHECK: 1 error generated.
