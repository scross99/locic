// RUN: %locic %s --verify > %t
// RUN: FileCheck < %t %s

interface CanDoThing {
	void doThing();
	void doOtherThing();
}

interface CanDoThingAndOtherThingNoExcept {
	void doThing() noexcept;
	void doOtherThing() noexcept;
}

interface CanDoThingNoExcept {
	void doThing() noexcept;
}

template <typename T>
void doThingAndOtherThing(T& object) noexcept(T : CanDoThingAndOtherThingNoExcept) require(T : CanDoThing) {
	object.doThing();
	object.doOtherThing();
}

template <typename T>
// CHECK: .loci:26:25: error: function 'doThing' has noexcept predicate 'T : CanDoThingAndOtherThingNoExcept' which isn't implied by explicitly declared noexcept predicate 'T : CanDoThingNoExcept'
void doThing(T& object) noexcept(T : CanDoThingNoExcept) require(T : CanDoThing) {
	doThingAndOtherThing<T>(object);
}

class TestClass() {
	void doThing() { }
	void doOtherThing() { }
}

class TestClassNoExcept() {
	void doThing() noexcept { }
	void doOtherThing() noexcept { }
}

void callDoThing(TestClass& object) {
	doThing<TestClass>(object);
}

void callDoThingNoExcept(TestClassNoExcept& object) noexcept {
	doThing<TestClassNoExcept>(object);
}

// CHECK: 1 error generated.
