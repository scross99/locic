// RUN: %locic %s --verify > %t
// RUN: FileCheck < %t %s

// CHECK: Template arguments do not satisfy require predicate 'and(satisfies(type: int_t, requirement: comparable_t<int_t>), satisfies(type: TestClass, requirement: comparable_t<TestClass>))' of method 'compare' at position SourceLocation(filename = {{.*}}/ComparePartiallyNonComparableDatatype.loci, range = (line 13, column 9) to (line 13, column 15)).

class TestClass() {
	// Not comparable.
}

datatype TestDatatype(int comparableValue, TestClass object);

bool doCompare(const TestDatatype& a, const TestDatatype& b) {
	return a == b;
}
