// RUN: %locic %s --emit-llvm -o %t

interface Has0 {
	void do0();
}

template <typename T>
require(T : Has0)
interface Has1 {
	void do1(T& value);
}

template <typename T>
require(T : Has0)
using CheckHas1 = T : Has0 and T : Has1<T>;

/* We shouldn't get an error about T : Has0 being required by CheckHas1 here
 * because in evaluating the alias CheckHas1 we add 'T : Has0 and T : Has1<T>' to
 * the requirements of TestClass, meaning that the 'T : Has0' requirement of
 * CheckHas1 is actually implied by the requirement of TestClass!
 */
template <typename T>
require(CheckHas1<T>)
class TestClass() { }
