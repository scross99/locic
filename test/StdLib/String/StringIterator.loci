// RUN: %locic %s std.string:0.1.0 --interpret > %t
// RUN: FileCheck < %t %s

// CHECK: string[0] = 69
// CHECK: string[1] = 120
// CHECK: string[2] = 97
// CHECK: string[3] = 109
// CHECK: string[4] = 112
// CHECK: string[5] = 108
// CHECK: string[6] = 101
// CHECK: string[7] = 32
// CHECK: string[8] = 84
// CHECK: string[9] = 101
// CHECK: string[10] = 120
// CHECK: string[11] = 116
// CHECK: string[11] = 116
// CHECK: string[10] = 120
// CHECK: string[9] = 101
// CHECK: string[8] = 84
// CHECK: string[7] = 32
// CHECK: string[6] = 101
// CHECK: string[5] = 108
// CHECK: string[4] = 112
// CHECK: string[3] = 109
// CHECK: string[2] = 97
// CHECK: string[1] = 120
// CHECK: string[0] = 69

// Test output.
import void printf(const ubyte * str, ...) noexcept;

// Entry point.
export int main(unused int argc, unused ubyte ** argv) {
	auto string = "Example Text";
	
	{
		auto iterator = string.begin();
		assert iterator.is_begin();
		
		for (auto i: range<size_t>(0, string.length())) {
			printf(C"string[%llu] = %llu\n",
				  i.cast<ulonglong>(),
				  (*iterator).cast<ulonglong>());
			iterator++;
		}
		
		assert iterator.is_end();
		assert iterator == string.end();
	}
	
	{
		auto iterator = string.end();
		assert iterator.is_end();
		
		for (auto i: range<size_t>(0, string.length())) {
			iterator--;
			printf(C"string[%llu] = %llu\n",
				  (string.length() - i - 1u).cast<ulonglong>(),
				  (*iterator).cast<ulonglong>());
		}
		
		assert iterator.is_begin();
		assert iterator == string.begin();
	}
	
	return 0;
}

