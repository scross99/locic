// RUN: %locic %s --emit-llvm -o %t

template <typename T>
require(is_movable<notag(T)> and is_implicit_copyable<T>)
class CheckIsCopyable() { }

import CheckIsCopyable<final_lval_t<int>> checkMutableFinalLvalIsCopyable();
import CheckIsCopyable<final_lval_t<const int>> checkInnerConstFinalLvalIsCopyable();
import CheckIsCopyable<const final_lval_t<int>> checkOuterConstFinalLvalIsCopyable();
import CheckIsCopyable<const final_lval_t<const int>> checkBothConstFinalLvalIsCopyable();
import CheckIsCopyable<const final_lval_t<final_lval_t<int>>> checkDoubleNestedConstFinalLvalIsCopyable();
import CheckIsCopyable<const final_lval_t<final_lval_t<final_lval_t<int>>>> checkTripleNestedConstFinalLvalIsCopyable();
