// RUN: %locic %s --emit-llvm -o %t

// A recursive cycle.

template <typename T>
require(T : RecursiveCycle<T>)
interface RecursiveCycle {
	void method();
}

import RecursiveCycle<TestClass>& recursiveCycle();

// A single level cycle.

template <typename A>
require(A : A)
interface SingleCycle {
	void method();
}

import SingleCycle<TestClass>& singleCycle();

// A multi-level cycle.

template <typename A, typename B, typename C>
require(A : B and B : C and C : A)
interface MultiCycle {
	void method();
}

import MultiCycle<TestClass, TestClass, TestClass>& multiCycle();

// Test class.

class TestClass() {
	void method() { }
}
