// Test output.
import void testPrint(const ubyte * str, ...);

interface Printable {
	void print();
}

class InnerClass(int value) {
	static Create(int value) {
		return @(move value);
	}
	
	void print() {
		testPrint(C"        InnerClass.printValue: value = %d", @value);
	}
}

template <typename T>
require(T : Printable and is_movable<T>)
class MiddleClass(T value) {
	static Create(T value) {
		return @(move value);
	}
	
	void print() {
		testPrint(C"    MiddleClass.printValue");
		@value.print();
	}
}

class OuterClass(MiddleClass<InnerClass> value) {
	static Create(MiddleClass<InnerClass> value) {
		return @(move value);
	}
	
	void print() {
		testPrint(C"OuterClass.printValue");
		@value.print();
	}
}

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	OuterClass object = OuterClass(MiddleClass<InnerClass>(InnerClass(2014)));
	object.print();
	
	return 0;
}

