// Test output.
import void testPrint(const ubyte * str, ...) noexcept;

class BuildClass(int value) {
	static Create(int value) {
		testPrint(C"BuildClass.Create(): %d", value);
		return @(value);
	}
	
	void print() {
		testPrint(C"BuildClass.print(): %d", @value);
	}
}

template <typename T : movable_t>
interface Constructible {
	static T Create(int value);
	
	void print();
}

template <typename T>
require(T : Constructible<T> and is_movable<T>)
class TestClass(T value) {
	static Create(int value) {
		testPrint(C"TestClass.Create()");
		return @(T(value));
	}
	
	void print() {
		testPrint(C"TestClass.print()");
		@value.print();
	}
}

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	TestClass<BuildClass> testClass = TestClass<BuildClass>(42);
	testClass.print();
	
	return 0;
}

