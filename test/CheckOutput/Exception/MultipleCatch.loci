// RUN: %locic %s --interpret > %t
// RUN: FileCheck < %t %s

// CHECK: Not throwing.
// CHECK: Throwing first exception.
// CHECK: Caught exception V1 with value 1!
// CHECK: Throwing second exception.
// CHECK: Caught exception V2 with values 2 and 3!
// CHECK: Throwing third exception.
// CHECK: Caught exception V3 with values 4, 5 and 6!
// CHECK: Throwing fourth exception.
// CHECK: Caught exception V4 with values 7, 8, 9 and 10!

import void printf(const ubyte * str, ...) noexcept;

exception ExampleError1(int value1);
exception ExampleError2(int value1, int value2);
exception ExampleError3(int value1, int value2, int value3);
exception ExampleError4(int value1, int value2, int value3, int value4);

void throwFunction(int throwIndex) {
	try {
		if (throwIndex == 0) {
			printf(C"Not throwing.\n");
		}
		if (throwIndex == 1) {
			printf(C"Throwing first exception.\n");
			throw ExampleError1(1);
		}
		if (throwIndex == 2) {
			printf(C"Throwing second exception.\n");
			throw ExampleError2(2, 3);
		}
		if (throwIndex == 3) {
			printf(C"Throwing third exception.\n");
			throw ExampleError3(4, 5, 6);
		}
		if (throwIndex == 4) {
			printf(C"Throwing fourth exception.\n");
			throw ExampleError4(7, 8, 9, 10);
		}
	} catch (ExampleError1 error) {
		printf(C"Caught exception V1 with value %d!\n",
			error.value1);
	} catch (ExampleError2 error) {
		printf(C"Caught exception V2 with values %d and %d!\n",
			error.value1, error.value2);
	} catch (ExampleError3 error) {
		printf(C"Caught exception V3 with values %d, %d and %d!\n",
			error.value1, error.value2, error.value3);
	} catch (ExampleError4 error) {
		printf(C"Caught exception V4 with values %d, %d, %d and %d!\n",
			error.value1, error.value2, error.value3, error.value4);
	}
}

export int main(unused int argc, unused ubyte ** argv) {
	throwFunction(0);
	throwFunction(1);
	throwFunction(2);
	throwFunction(3);
	throwFunction(4);
	return 0;
}

