// Test output.
import void testPrint(const ubyte * str, ...) noexcept;

class TestClass(MemberClass member) {
	static create(MemberClass value) noexcept {
		return @(move value);
	}
	
	MemberClass extract() noexcept {
		return move @member;
	}
}

class MemberClass() {
	static create = default;
	
	~ {
		testPrint(C"MemberClass.~");
	}
	
	void __moveto(unused void* ptr, unused size_t position) noexcept {
		testPrint(C"MemberClass.__moveto");
	}
}

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	testPrint(C"TestClass testInstance = TestClass(MemberClass());");
	TestClass testInstance = TestClass(MemberClass());
	
	testPrint(C"TestClass* testInstancePtr = &testInstance;");
	TestClass* testInstancePtr = &testInstance;
	
	testPrint(C"*testInstancePtr = TestClass(MemberClass());");
	*testInstancePtr = TestClass(MemberClass());
	
	return 0;
}

