// RUN: %locic %s --interpret > %t
// RUN: FileCheck < %t %s

// CHECK: auto testInstance = TestClass();
// CHECK: TestClass.Create
// CHECK: auto testInstanceMoved = move testInstance;
// CHECK: TestClass.__move
// CHECK: auto testInstanceMovedAgain = move testInstanceMoved;
// CHECK: TestClass.__move

import void printf(const ubyte * str, ...) noexcept;

class TestClass() {
	static Create() {
		printf(C"TestClass.Create\n");
		return @();
	}
	
	TestClass __move() noexcept {
		printf(C"TestClass.__move\n");
		return @();
	}
}

export int main(unused int argc, unused ubyte ** argv) {
	printf(C"auto testInstance = TestClass();\n");
	auto testInstance = TestClass();
	
	printf(C"auto testInstanceMoved = move testInstance;\n");
	auto testInstanceMoved = move testInstance;
	
	printf(C"auto testInstanceMovedAgain = move testInstanceMoved;\n");
	unused auto testInstanceMovedAgain = move testInstanceMoved;
	
	return 0;
}

