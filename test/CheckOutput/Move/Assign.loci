// RUN: %locic %s --interpret > %t
// RUN: FileCheck < %t %s

// CHECK: TestClass testInstance = TestClass(MemberClass());
// CHECK: MemberClass.__move
// CHECK: testInstance = TestClass(MemberClass());
// CHECK: MemberClass.__move
// CHECK: MemberClass.~
// CHECK: MemberClass.__move
// CHECK: MemberClass.~

import void printf(const ubyte * str, ...) noexcept;

class TestClass(MemberClass member) {
	static create(MemberClass value) noexcept {
		return @(move value);
	}
}

class MemberClass() {
	static create = default;
	
	~ {
		printf(C"MemberClass.~\n");
	}
	
	MemberClass __move() noexcept {
		printf(C"MemberClass.__move\n");
		return MemberClass();
	}
}

export int main(unused int argc, unused ubyte ** argv) {
	printf(C"TestClass testInstance = TestClass(MemberClass());\n");
	TestClass testInstance = TestClass(MemberClass());
	
	printf(C"testInstance = TestClass(MemberClass());\n");
	testInstance = TestClass(MemberClass());
	
	return 0;
}

