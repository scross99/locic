// Test output.
import void testPrint(const ubyte * str, ...) noexcept;

class TestClass(int value) {
	static Create() {
		return @(0);
	}
	
	void __moveto(void* ptr, size_t position) noexcept {
		@value += 1;
		@value.__moveto(ptr, position);
	}
	
	int value() const noexcept {
		return @value;
	}
}

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	testPrint(C"auto testInstance = TestClass();");
	auto testInstance = TestClass();
	testPrint(C"Move Count = %d", testInstance.value());
	
	testPrint(C"auto testInstanceMoved = move testInstance;");
	auto testInstanceMoved = move testInstance;
	testPrint(C"Move Count = %d", testInstanceMoved.value());
	
	testPrint(C"auto testInstanceMovedAgain = move testInstanceMoved;");
	auto testInstanceMovedAgain = move testInstanceMoved;
	testPrint(C"Move Count = %d", testInstanceMovedAgain.value());
	
	return 0;
}

