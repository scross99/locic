
import std.container 0.1.0 {
	
	namespace std {
		
		class hasher {
			static hasher create() noexcept;
			
			void hash_int(int value) noexcept;
			
			size_t get() const noexcept;
		}
		
		interface hasher_api {
			void hash_int(int value) noexcept;
		}
		
		interface hashable_api {
			void hash(hasher_api& hasher) const noexcept;
		}
		
		template <typename T>
		require(T : hashable_api)
		class hash {
			static hash<T> create() noexcept;
			
			size_t call(const T& object) const noexcept;
		}
		
	}
	
}
