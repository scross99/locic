import std.container 0.1.0 {

	namespace std {
		
		template <typename T>
		interface output_range {
			void push_back(T value) require(movable<T>);
		}
		
		template <typename T, typename LvalType>
		interface input_range {
			bool empty() const;
			
			void skip_front();
			
			lval<const T> LvalType front() const require(movable<LvalType>);
		}
		
		template <typename T, typename LvalType>
		interface bidirectional_range {
			bool empty() const;
			
			void skip_front();
			
			lval<T> LvalType front() const require(movable<LvalType>);
			
			void skip_back();
			
			lval<T> LvalType back() const require(movable<LvalType>);
		}
		
	}
	
}
