import std.concurrency 0.1.0 {

	namespace std {
		
		template <typename T>
		concurrency::thread new_thread(T runnable_object)
		require(T : concurrency::runnable and movable<T> and destructible<T>);
		
		namespace concurrency {
			
			class thread {
				template <typename T>
				static thread create(T runnable_object)
				require(T : runnable and movable<T> and destructible<T>);
				
				void cancel();
				
				void join();
				
				event::source event_source() const noexcept;
			}
			
		}
	}
	
}


