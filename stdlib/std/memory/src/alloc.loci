import void* calloc(size_t num, size_t size) noexcept;
import void free(void* ptr) noexcept;
import void printf(const ubyte* format, ...) noexcept;

export std.memory 0.1.0 {
	
	namespace std {
		
		exception bad_alloc();
		
		void* allocate(const size_t size) {
			auto ptr = calloc(1u, size);
			if (ptr == null) {
				printf(C"Failed to allocate %llu bytes.\n", size.cast<ulonglong_t>());
				throw bad_alloc();
			}
			return ptr;
		}
		
		void release(void* ptr) noexcept {
			free(ptr);
		}
		
	}
	
}

