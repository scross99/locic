template <typename T>
__primitive ptr_lval_t {
	static size_t __alignmask() noexcept;
	static size_t __sizeof() noexcept;
	
	template <bool IsConst>
	const<IsConst>(T)* address() const(IsConst) noexcept;
	
	void assign(T value) noexcept require(movable<T>);
	
	template <bool IsConst>
	const<IsConst>(T)& dissolve() const(IsConst) noexcept;
	
	T move() noexcept require(movable<T>);
	
	void setvalue(T value) noexcept require(movable<T>);
	T extractvalue() noexcept require(movable<T>);
	void destroyvalue() noexcept;
	
	ptr_lval_t<T> __move() noexcept;
}
