template <typename T>
notag(T)
__primitive reverse_range_t {
	static reverse_range_t<T> create(T begin, T end) noexcept require(movable<T>);
	
	static size_t __alignmask() noexcept require(sized_type<T>);
	static size_t __sizeof() noexcept require(sized_type<T>);
	
	size_t implicit_copy() const noexcept require(implicit_copyable<T>);
	size_t copy() const noexcept require(copyable<T>);
	
	void __destroy() noexcept require(destructible<T>);
	
	void __setdead() noexcept;
	bool __islive() const noexcept;
	
	const T& front() const noexcept;
	
	void skip_front() noexcept(noexcept_incrementable<T>) require(incrementable<T>);
	
	bool empty() const noexcept(noexcept_lessthancomparable<T>) require(lessthancomparable<T>);
	
	void __moveto(void* ptr, size_t position) noexcept require(movable<T>);
}

template <typename T>
__primitivefunction reverse_range_t<T> reverse_range(T begin, T end) noexcept require(movable<T>);
