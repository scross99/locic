template <typename T>
interface castable_t {
	T cast() const;
}

template <typename T, typename CastType>
using castable = T : castable_t<CastType>;

template <typename T>
interface noexcept_castable_t {
	T cast() const noexcept;
}

template <typename T, typename CastType>
using noexcept_castable = T : noexcept_castable_t<CastType>;

template <typename T>
interface implicit_castable_t {
	T implicit_cast() const;
}

template <typename T, typename CastType>
using implicit_castable = T : implicit_castable_t<CastType>;

template <typename T>
interface noexcept_implicit_castable_t {
	T implicit_cast() const noexcept;
}

template <typename T, typename CastType>
using noexcept_implicit_castable = T : noexcept_implicit_castable_t<CastType>;
